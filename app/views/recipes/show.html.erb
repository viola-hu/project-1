<div class="spotlight-container">
<%= image_tag @recipe.category.image, alt: "#{@recipe.category.name}", class: "spotlight-image" %>
  <div class="spotlight-text">
    <h1><%= @recipe.name.upcase %></h1>
    <h2>By <%= @recipe.user.name %></h2>
  </div>
</div>


<div class="first-layer-content">
  <div class="second-layer-content">
    <%# image sitting next to the the title, need to limit the image size! %>
    <% if @recipe.image.present? %>
      <%= cl_image_tag @recipe.image, alt: @recipe.name, class: "recipe-image"%>
    <% end %>
    <br><br>

    <!-- to substitute all '\n' with '<br>' to actually make html render the line break -->
    <!-- .html_safe is to tell the browser that it's a legit html element, render it but not treat it as a string -->
    <h3>Ingredients</h3>
    <p><%= @recipe.ingredients.gsub("\n", '<br>').html_safe %></p>
    <br>


    <% if @current_user.present? && @current_user == @recipe.user%>
      <%= link_to 'Edit this recipe', edit_recipe_path(@recipe) %> |
      <%= link_to 'Delete this recipe', recipe_path(@recipe), method:'delete' %>
      <br><br>
    <% end %>


    <h3>Top Nutritious Foods</h3>
    <ul>
      <% @recipe.foods.each do |food| %>
        <li>
          <%= link_to "#{food.name} (category: #{food.category.name})", food_recipes_path(food), class:"food-list" %>
        </li>
      <% end %>
    </ul>
    <br>


    <h3>Ratings & Comments</h3>
    <!-- public area, show exisiting comments -->
    <% if @recipe.reviews.present? %>
      <% @recipe.reviews.each do |review| %>
        <p>Rating: <%= review.rating %> | By: <%= review.user.name %></p>
        <p>Comment: <%= review.comment %></p>
        <br>
      <% end %>
    <% else %>
      <p>No comments yet!</p>
      <br>
    <% end %>



    <!-- authenticated user area: if login && not recipe owner, can make comment -->

    <div class="error">
      <% if flash[:errors].present? %>
        <ul>
          <% flash[:errors].each do |error| %>
          <li><%= error %></li>
          <% end %>
        </ul>
      <% end %>
    </div>

    <% if @current_user.present? %>
      <% if @current_user.id != @recipe.user_id %>
        <%= form_tag new_review_path do %>
          <strong><%= label_tag :rating, "Your rating: " %></strong>
          <%= text_field_tag :rating, nil, placeholder: "Rating out of 5" %>
          <br><br>
          <strong><%= label_tag :comment, "Your comment: " %></strong>
          <!-- @review&.comment is checking if @review is nil? if no, use @review.comment as defalt value, thus when errors happen and render this page (in ReviewsController), previous comment is prefilled.
          '&' - safe navigation operator, checking if the left object is nil?
          if nil, not to touch it(otherwise it triggers error), and text_area_tag's value will be nil automatically; if @review has valid value not nil, show @review.comment's value-->
          <%= text_area_tag :comment, @review&.comment, placeholder: "Write your comment" %>
          <br><br>
          <%= submit_tag "Create comment" %>
        <% end %>
      <% end %>
    <% else %>
      <%= link_to 'Login to leave your comment.', login_path %>
    <% end %>
  </div>
</div>
